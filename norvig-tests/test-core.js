exports.tests = [
	['1',1],
	['(+ 1 2 3 4)',10], 
	['(+ 1 2 3 (- 1 2))',5],
	['(+ 1 2 3 (- 1))',5],
	['(Math.pow 3 2)',9],
	['(defvar a 2)',2],
	['(+ a a)',4],
	['(defvar a 4)',4],
	['(+ a a)',8],
	['(- a a)',0],
	['(+ a a (- a))',4],
	['(+ a a (- a a))',8],
	['(* a a)',16],
	['(/ a a)',1],
	['(* a a (/ a a))',16],
	['(defvar a)',undefined],
	['(a)',undefined],
	['(defvar)',null],
	['(car 1 2 3 4)',[1]],
	['(cdr 1 2 3 4)',[2,3,4]],
	['(begin (+ 1 2) (+ 2 3) (+ 3 4))',7],
	['(cond true "cond-true" "cond-false")',"cond-true"],
	['(cond (nil? null) "cond-true" "cond-false")',"cond-true"],
	['(cond (nil? true) "cond-true" "cond-false")',"cond-false"],
	['(cond (eq? "abc" "abc") "cond-true" "cond-false")',"cond-true"],
	['(cond (eq? "abc" "cba") "cond-true" "cond-false")',"cond-false"],
	['(cond (list? (1 2 3)) "cond-true" "cond-false")',"cond-true"],
	['(cond (list? (car 1 2 3)) "cond-true" "cond-false")',"cond-true"],
	['(cond (list? (cdr 1 2 3)) "cond-true" "cond-false")',"cond-true"],
	['(cond (list? "abc") "cond-true" "cond-false")',"cond-false"],
];
